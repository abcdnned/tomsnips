snippet wraplen "wraplength decoder" b
<protocol id="wrap length" baseProtocol="tcp">
	<property>
		<attribute key="fieldSize" value="${1:length}"/>
		<attribute key="fieldEncoding" value="${2:encoding}"/>
	</property>
	<recordField allItem="true">
	</recordField>
</protocol>
endsnippet

snippet padding "padding decoder" b
<protocol id="padding" baseProtocol="${1:base}">
	<property>
		<attribute key="paddingLength" value="${2:reqlen},${3:resplen}" />
		<attribute key="recordPaddingBuffer" value="true" />
	</property>
	<recordField allItem="true">
		<field item="PaddingBuffer">${4:buffname}</field>
	</recordField>
</protocol>
endsnippet

snippet split "split decoder" b
<protocol id="split" baseProtocol="${1:base}">
    <property>
        <attribute key="charset" value="gb2312"/>
        <attribute key="separator" value="|"/>
        <attribute key="needKvSplitter" value="true"/>
        <attribute key="needConfiguration" value="true"/>
		<multiValueAttribute key="reqFieldDef">
			<value hint="reqFields">
				DeviceID|MsgType|TranCode|ClientDate|ClientTime|ClientType|ClientTraceNum|ClientRevTraceNum
			</value>
		</multiValueAttribute>
		<multiValueAttribute key="respFieldDef">
			<value hint="respFields">
				TspRespCode|TspRespDes|DeviceID|ClientDate|ClientTraceNum|TspDate
			</value>
		</multiValueAttribute>
    </property>
    <recordField allItem="true">
    </recordField>
</protocol>
endsnippet

snippet network "define network" b
<network enable="true">
	<unit default="client">
		<item ip="${1:serverip}" name="server" />
	</unit>
	<rule enable="true">
		<item type="req" from="client" />
		<item type="resp" from="server" />
	</rule>
</network>
endsnippet

snippet charset "charset property" b
<property>
	<attribute key="charset" value="${1:gb2312}" />
</property>
endsnippet

snippet iso "base iso decoder" b
<protocol id="base iso" baseProtocol="${1:base}">
    <property>
        <attribute key="template" value="cups" type="String"/>
        <multiValueAttribute key="overrideFields" type="String" ignoreCase="false">
            <value hint="17">fix;8;ascii;string;TransDate</value>
            <value hint="31">ascii;2;ascii;string;F31</value>
            <value hint="56">ascii;3;ascii;string;ICCSystemRelatedData</value>
            <value hint="85">fix;4;ascii;string;F85</value>
        </multiValueAttribute>
    </property>
    <recordField allItem="true"/>
</protocol>
endsnippet

snippet field "rename field" b
<field item="${2:oldName}">${1:newName}</field>
endsnippet

snippet dsl "dsl decoder" b
<protocol id="dsl" baseProtocol="${1:base}">
	<property>
		<attribute key="charset" value="gbk" />
		<multiValueAttribute key="pattern" type="String" ignoreCase="false">
			<value>
				<![CDATA[
<buffer>
    <!-- The buffer must completed. -->
    <get var="containsNextLayerComplete" target="decodeStatus"
        property="containsNextLayerComplete" />
    <if test="${containsNextLayerComplete == false}">
        <throw exception="ProtocolErrorException" message="The layer must completed." />
    </if>
    <core:decodeStatus status="LayerBegin" />
</buffer>
				]]>
			</value>
		</multiValueAttribute>
	</property>
	<recordField allItem="true" />
</protocol>
endsnippet

snippet regex "regex decoder" b
<protocol id="regex" baseProtocol="tcp">
    <property>
        <attribute key="maxSearchCount" value="1" type="Integer"/>
        <attribute key="unsetLayerBeginFlag" value="false" type="boolean"/>
        <multiValueAttribute key="requestPattern" type="String" ignoreCase="false">
            <value hint="name=*|flag=CASE_INSENSITIVE:COMMENTS">
                <![CDATA[
                (?<Action>POST|GET|PUT|DELETE)\s(?<Url>.+)\sHTTP/1.1\s+
                HOST:\s(?<Host>.+)\s+
                Connection:\s(?<Connection>.+)\s+
                ]]>
            </value>
        </multiValueAttribute>
        <multiValueAttribute key="responsePattern" type="String" ignoreCase="false">
            <value hint="name=*|flag=CASE_INSENSITIVE:COMMENTS">
                <![CDATA[
                HTTP/1.1\s(?<StatusCode>\d+)\s(?<Status>\w+)\s+
                (Date:\s(?<Date>.+)\s+)?
                (Server:\s(?<Server>.+)\s+)?
                (ETag:\s.+\s+)?
                (Last-Modified:\s.+\s+)?
                (Content-Length:\s.+\s+)?
                ]]>
            </value>
        </multiValueAttribute>
    </property>
    <recordField allItem="true"/>
</protocol>
endsnippet

snippet searchpattern "search pattern decoder" b
<protocol id="search pattern" baseProtocol="${1:base}">
	<property>
		<attribute key="searchLength" value="0" type="Integer" />
		<multiValueAttribute key="pattern" type="String" ignoreCase="false">
			<value hint="positionAfterPattern=false|offset=-1">3c</value>
		</multiValueAttribute>
	</property>
</protocol>
endsnippet

snippet xml "xml decoder" b
<protocol id="xml" baseProtocol="${1:http}">
	<recordField allItem="true" template="xpath" />
</protocol>
endsnippet

snippet searchxml "search xml decoder" b
<protocol id="search xml" baseProtocol="http">
	<property>
		<attribute key="startSearchSize" value="0" type="Integer" />
		<attribute key="endSearchSize" value="250" type="Integer" />
		<attribute key="disableCheckDeclaration" value="true" type="Boolean" />
		<multiValueAttribute key="rootNode">
			<value>RspCode</value>
			<value>BrcName0</value>
		</multiValueAttribute>
	</property>
	<recordField allItem="true" template="xpath">
	</recordField>
</protocol>
endsnippet

snippet dslfld "field in dsl" b
<field name="${2:fldname}" cache="${3:true}" record="${4:true}">
	<L>${1:len}</L>
</field>
endsnippet

snippet dslunsign "Description" b
<field name="${1:name}" cache="${2:true}" record="${3:false}">
	<L>${4:1}</L>
	<T>UNSIGNEDNUMBER</T>
	<V>${5:BYTE}</V>
</field>
endsnippet

snippet position "Description" b
<buf:getPosition var="${1:p}" />
<buf:setPosition value="${${2:p}}" />
endsnippet

snippet kvpair "kvpair" b
<protocol id="keyvalue pair" baseProtocol="${1:base}">
	<property>
		<attribute key="charset" value="GBK"/>
		<attribute key="kvSplitter" value="=" type="Char" />
		<attribute key="itemSplitter" value="|" type="Char" />
		<attribute key="end" value="|" type="Char" />
	</property>
	<recordField allItem="true">
	</recordField>
</protocol>
endsnippet

snippet replacebyte "byte replace decoder" b
<protocol id="byte replace" baseProtocol="${1:base}">
    <property>
        <attribute key="replacedByteInAscii" value="${2:from}" />
        <attribute key="replacedValueInAscii" value="${3:to}" />
    </property>
    <recordField allItem="false">
    </recordField>
</protocol>
endsnippet

snippet json "json decoder" b
<protocol id="json" baseProtocol="${1:base}">
	<recordField allItem="true" template="json">
	</recordField>
</protocol>
endsnippet

snippet detectbegin "detect begin decoder" b
<protocol id="detect begin" baseProtocol="tcp">
	<property>
		<attribute key="searchLength" value="100" type="String" />
		<attribute key="useWeakLayerBegin" value="false" type="boolean" />
		<multiValueAttribute key="pattern" type="String" ignoreCase="false">
			<value hint="hex">${1:pattern}</value>
		</multiValueAttribute>
	</property>
	<recordField allItem="true" />
</protocol>
endsnippet

snippet detectend "detect end decoder" b
<protocol id="detect end" baseProtocol="detect begin">
	<property>
		<attribute key="searchLength" value="${1:0}" type="Integer"/>
		<multiValueAttribute key="pattern" type="String" ignoreCase="false">
			<value hint="hex">${2:pattern}</value>
		</multiValueAttribute>
	</property>
</protocol>
endsnippet

snippet join "join extend field" b
<extendField>
	<field op="join" item="Cont_Type StatusCode Connection" separator=":">JoinedField</field>
</extendField>
endsnippet

snippet dummy "dummy used in http stack" b
<protocol id="dummy" baseProtocol="http">
    <recordField allItem="false"></recordField>
</protocol>
endsnippet

snippet dslwraplen "dsl wrap length" b
<protocol id="dsl" baseProtocol="tcp">
	<property>
		<multiValueAttribute key="pattern" type="String" ignoreCase="false">
			<value>
				<![CDATA[
<buffer>
	<field name="magic" cache="true" record="false">
		<L>4</L>
	</field>
	<if test="${magic == 'F009'}" >
		<core:decodeStatus status="LayerBegin" />
		<field name="len" cache="true" record="false">
			<L>5</L>
		</field>
		<if test="${str:isNumeric(len)}">
			<log value="${len}"/>
			<log value="${_buffer.remaining()}"/>
			<if test="${_buffer.remaining() &lt; len}">
				<core:decodeStatus status="LayerTruncate" />
				<else>
					<log value="layer complete"/>
					<core:decodeStatus status="NextLayerComplete" />
				</else>
			</if>
			<else>
				<core:decodeStatus status="LayerTruncate" />
			</else>
		</if>
		<else>
			<core:decodeStatus status="LayerTruncate" />
		</else>
	</if>
</buffer>
				]]>
			</value>
		</multiValueAttribute>
	</property>
	<recordField allItem="true" />
</protocol>
endsnippet

snippet data "data decoder" b
<protocol id="data" baseProtocol="${1:base}">
	<recordField allItem="true">
	</recordField>
</protocol>
endsnippet

snippet dslrra "get dsl rra" b
<core:getRRA var="rra" />
<if test="${rra == 'req'}">
<else>
	<if test="${rra == 'resp'}">
	</if>
</else>
</if>
endsnippet

snippet xmlerrdom "xml include error dom" b
<attribute key="disableSearchDeclaration" value="true" type="Boolean"></attribute>
<attribute key="includeErrorDom" value="true" type="Boolean"></attribute>
<attribute key="acceptEncodingError" value="true" type="Boolean"></attribute>
<attribute key="isNamespaceAware" value="false" type="Boolean"></attribute>
<attribute key="enableFilterUnicode" value="true" type="Boolean"></attribute>
endsnippet

snippet dcdversion "dcd version nodes in register.xml" b
<version>${1:2}</version>
<changelogs>
	<changelog version="$1">${2:message}</changelog>
</changelogs>
endsnippet

snippet mva "multiValueAttribute" b
<multiValueAttribute key="${1:key}" type="String" mismatchAction="accept" ignoreCase="false" >
	<value hint="${2:hint}">${3:value}</value>
</multiValueAttribute>
endsnippet

snippet http "Description" b
<protocol id="http" baseProtocol="tcp">
	<recordField allItem="true" />
</protocol>
endsnippet

snippet proto "Description" b
<protocol id="${1:proto}" baseProtocol="${2:tcp}">
    <recordField allItem="true">
    </recordField>
</protocol>
endsnippet

snippet ssl "Description" b
<protocol id="ssl" baseProtocol="tcp">
	<property>
		<attribute key="privateKey" value="$src/test/java/cn/com/netis/dcd/parser/regression/${1:pempath}" type="String" />
	</property>
	<recordField allItem="true" />
</protocol>
endsnippet

snippet attr "Description" b
<property>
	<attribute key="${1:key}" value="${2:value}"/>
</property>
endsnippet

snippet dsltlv "Description" b
<while test="${_buffer.hasRemaining()}">
    <field name="klen" cache="true" record="false">
        <T>NUMBER</T>
        <L>1</L>
        <V>BYTE</V>
    </field>
    <field name="key" cache="true" record="false">
        <L>${klen}</L>
    </field>
    <field name="vlen" cache="true" record="false">
        <T>NUMBER</T>
        <L>4</L>
        <V>INTEGER</V>
    </field>
    <field name="${key}" cache="true" record="true">
		<T encoding = "CHARSET">STRING</T>
        <L>${vlen}</L>
    </field>
</while>
endsnippet

snippet dataencoding "Description" b
<protocol id="data encoding" baseProtocol="${2:tcp}">
	<property>
	<attribute key="encoding" value="${1:base64}" type="String"/>
	</property>
</protocol>
endsnippet

snippet version "Description" b
<version>${1:2}</version>
<changelogs>
	<changelog version="$1">${2:message}</changelog>
</changelogs>
endsnippet
