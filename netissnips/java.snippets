snippet layerb "Description" b
decodeStatus.addDecodeFlag(DecodeFlag.LayerBegin);
endsnippet

snippet layert "Description" b
decodeStatus.addDecodeFlag(DecodeFlag.LayerTruncate);
endsnippet

snippet !huygens "import huygens decode package" b
import cn.com.netis.dcd.parser.huygens.
endsnippet

snippet !buffer "import util.buffer package" b
import cn.com.netis.dcd.parser.util.buffer.
endsnippet

snippet !common "import dp.commons.common package" b
import cn.com.netis.dp.commons.common.
endsnippet

snippet asciibuff "use AsciiBuffer to read String" b
String ${1:vname} = AsciiBuffer.getString(${2:clearBuffer},${3:len});
endsnippet

snippet record "record value" 
getRecordsManager().recordValue(${1:k}, ${2:v});
endsnippet

snippet ifrra "get rraType and do something" b
RRAType rraType=getRecordsManager().getRRAType();
if (rraType.equals(RRAType.req) || rraType.equals(RRAType.resp)) {
	DecodeField[] ${1:head}=rraType.equals(RRAType.req)?${2:REQ_FIELDS}:${3:RESP_FIELDS};
}
endsnippet

snippet forfields "Description" b
for (DecodeField field : ${1:fields}) {
	field.setCharset(getPreferredCharset());
	getRecordsManager().recordValue(field, ${2:clearBuffer});
}
endsnippet

snippet defs "dcd define template" b
{ { ${1:id} ,${2:null},${3:len},Encoding.${4:CHARSET}}, { "${5:TRANS_TYPE}", ValueType.STRING, true, "$5"} },
endsnippet

snippet dcdwraplen "wap length decoder tempalte" b
if (clearBuffer.remaining() > HEAD_LEN) {
	try {
		int len = AsciiBuffer.getInt(clearBuffer, HEAD_LEN);
		decodeStatus.addDecodeFlag(DecodeFlag.LayerBegin);
		if (clearBuffer.remaining() + HEAD_LEN >= len) {
			return true;
		}
	} catch (NumberFormatException e) {
	} catch (Throwable ignore) {
		LOG.warn(ExceptionUtils.getStackTrace(ignore));
	}
}

throw new BufferTruncatedException("buffer truncated.");
endsnippet
